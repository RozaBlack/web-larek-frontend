/*Класс отвечает за хранение и логику работы с информацией о заказе.\
Конструктор класса принимает экземпляр класса брокера событий\
В полях класса хранятся следующие данные:
- payment: string; - способ оплаты товаров
- email: string; - электронная почта, введенная пользователем
- phone: string; - номер теефона, введенный пользователем
- address: string; - адрес, по которому должна осуществляться доставка, введенный пользователем;
- order: IBasket; - информация о товарах в корзине
- event: IEvents - экземпляр класса `EventEmitter` для инициации событий при изменении данных.

Так же класс предоставляет набор методов для взаимодействия с данными:
- setOrderData(orderData: TOrderInfo | TCustomerInfo): void; - принимает и сохраняет данные заказа, введенные пользователем (способ оплаты и адрес или номер телефона и почту)
- getOrderData(): IOrder; - возвращает информацию о заказе
- checkValidation(data: Record<keyof (TOrderInfo | TCustomerInfo), string>): boolean; - проверяет данные, введенные пользователем в формы. */

import { IOrderData } from "../types";

export class OrderData implements IOrderData {
  
}